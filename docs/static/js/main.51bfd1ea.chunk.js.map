{"version":3,"sources":["components/contexto/Context.jsx","components/header/nav.jsx","components/infodia/InfoDia.jsx","components/infohoy/InfoHoy.jsx","components/variables/VariablesClima.jsx","components/inicio/InicioApp.jsx","routers/Router.jsx","App.js","index.js"],"names":["CoordenadasDelContexto","createContext","Context","props","useState","latitud","setLatitud","longitud","setLongitud","selectedCity","setSelectedCity","queryWeather","setQueryWeather","weatherInfo","setWeatherInfo","JSON","parse","localStorage","getItem","defaultCity","localStorageCity","useEffect","document","getElementById","value","axios","get","then","res","data","setItem","stringify","Provider","children","Nav","ciudad","setCiudad","datos","setDatos","contador","setContadort","useContext","handleCityItemClick","e","target","id","style","display","features","place_name","geometry","coordinates","className","to","type","placeholder","autoComplete","onChange","map","place","index","key","onClick","aria-hidden","InfoDia","dias","class","daily","i","fecha","Date","dt","dia","getDay","dayMinTemp","temp","min","dayMaxTemp","max","codeIcon","weather","icon","description","pressure","humidity","windSpeed","wind_speed","src","alt","role","InfoHoy","catch","err","console","log","current","main","feels_like","VariablesClima","dew_point","uvi","visibility","InicioApp","Router","exact","path","component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.51bfd1ea.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nexport const CoordenadasDelContexto  = createContext();\r\nexport const Context = (props) => {\r\n    const [latitud, setLatitud] = useState(\"\");\r\n    const [longitud, setLongitud] = useState(\"\");\r\n    const [selectedCity, setSelectedCity] = useState([]);\r\n    const [queryWeather, setQueryWeather] = useState(false);\r\n    const [weatherInfo, setWeatherInfo] = useState(\"\");\r\n    \r\n    const [defaultCity, setDefaultCity] = useState(\r\n        JSON.parse(localStorage.getItem(\"City\"))\r\n    );\r\n    const [localStorageCity, setLocalStorageCity] = useState(\r\n        JSON.parse(localStorage.getItem(\"weatherInfo\"))\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (localStorageCity) {\r\n            document.getElementById(\"buscador\").value = defaultCity;\r\n\r\n        setWeatherInfo(localStorageCity);\r\n        } else {\r\n        axios\r\n            .get(\r\n            \"https://api.openweathermap.org/data/2.5/onecall?lat=42.751210955&lon=-75.4652471468304&units=metric&appid=9588234de2b6e8b80bcda45cfc3f4e36\"\r\n            )\r\n            .then((res) => {\r\n            document.getElementById(\"buscador\").value = \"New York City\";\r\n            setWeatherInfo(res.data);\r\n            localStorage.setItem(\r\n                \"City\",\r\n                JSON.stringify(document.getElementById(\"buscador\").value)\r\n            );\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <CoordenadasDelContexto.Provider\r\n            value={\r\n                {\r\n                latitud,\r\n                setLatitud,\r\n                longitud,\r\n                setLongitud,\r\n                selectedCity,\r\n                setSelectedCity,\r\n                queryWeather,\r\n                setQueryWeather,\r\n                weatherInfo,\r\n                setWeatherInfo,\r\n            }}  \r\n        >\r\n        {props.children}\r\n        </CoordenadasDelContexto.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState,useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { CoordenadasDelContexto } from '../contexto/Context';\r\n\r\nimport axios from 'axios'\r\n\r\nexport const Nav = () => {\r\n    const [ciudad, setCiudad] = useState(\"\");\r\n    const [datos, setDatos] = useState([]);\r\n    const [contador, setContadort] = useState(0);\r\n    const {\r\n        selectedCity,\r\n        setSelectedCity,\r\n        setLatitud,\r\n        setLongitud,\r\n        setQueryWeather,\r\n    } = useContext(CoordenadasDelContexto);\r\n    const access_token = 'pk.eyJ1IjoiZnNhbmNoZXo5MiIsImEiOiJja2c0aWIzNXkwa3ZoMnRzMXhuZnA4bTY0In0.XyaMboojf9q8L9UWbuslGw';\r\n\r\n    \r\n    const handleClick = () => {\r\n        setCiudad(document.getElementById(\"buscador\").value);\r\n    };\r\n    \r\n    const handleChange = (e) => {\r\n    setCiudad(e.target.value);\r\n    document.getElementById(\"resultAPI\").style.display = \"inline\";\r\n    };\r\n    const handleCityItemClick = (e) => {\r\n        setSelectedCity(datos[e.target.id]);\r\n        setContadort(contador + 1);\r\n\r\n        document.getElementById(\"resultAPI\").style.display = \"none\";\r\n    };\r\n    useEffect(() => {\r\n        if (ciudad !== \"\") {\r\n            axios\r\n                .get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${ciudad}.json?access_token=${access_token}`)\r\n                .then((res) => {\r\n                    setDatos(res.data.features);\r\n                });\r\n            } else {\r\n                setDatos([]);\r\n                setSelectedCity([]);\r\n                setLatitud(\"\");\r\n                setLongitud(\"\");\r\n                setQueryWeather(false);\r\n            }\r\n    }, [ciudad]);\r\n\r\n    useEffect(() => {\r\n        if (ciudad !== \"\") {\r\n            document.getElementById(\"buscador\").value = selectedCity.place_name;\r\n            setLatitud(selectedCity.geometry.coordinates[1]);\r\n            setLongitud(selectedCity.geometry.coordinates[0]);\r\n            setQueryWeather(true);\r\n        }\r\n    }, [contador]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"columns is-vcentered\">\r\n                <div className=\"column is-6\">\r\n                    <Link to=\"/\" className=\"navbar-brand is-size-3 p-3 has-text-success\">\r\n                        Información del Clíma\r\n                    </Link>\r\n                </div>\r\n                <div className=\"column\">\r\n                        <article className=\"panel is-primary\">\r\n                            <div className=\"panel-block\">\r\n                                    <div className=\"field has-addons\">\r\n                                        <div className=\"control\">\r\n                                            <input \r\n                                                className=\"input \" \r\n                                                type=\"text\" \r\n                                                placeholder=\"Buscar Ciudad\"\r\n                                                id=\"buscador\"\r\n                                                autoComplete=\"off\"\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"control\">\r\n                                            <Link to=\"/\" className=\"button is-info\">\r\n                                                <i className=\"fas fa-trash-alt\"></i>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </article>\r\n                </div>\r\n            </div>\r\n            <div id=\"resultAPI\" className=\"box column is-6 is-pulled-right is-three-quarters-mobile is-two-thirds-tablet is-half-desktop is-one-third-widescreen is-one-quarter-fullhd\t\">\r\n                {\r\n                    datos.map((place, index) => {\r\n                        return (\r\n                            <Link to=\"/\" \r\n                                key={index}\r\n                                id={index} \r\n                                onClick={handleCityItemClick}\r\n                                className=\"panel-block is-active\">\r\n                                <span className=\"panel-icon\">\r\n                                    <i className=\"fas fa-book\" aria-hidden=\"true\"></i>\r\n                                </span>\r\n                                {place.place_name}\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <br/>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { CoordenadasDelContexto } from '../contexto/Context';\r\n\r\nexport const InfoDia = () => {\r\n    const { weatherInfo } = useContext(CoordenadasDelContexto);\r\n\r\n    const dias = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n    ];\r\n    if (weatherInfo !== \"\") {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container \">\r\n                <div class=\"columns is-multiline is-mobile is-centered\">\r\n                    {\r\n                        weatherInfo.daily.map((i, index) => {\r\n                            let fecha = new Date(i.dt * 1000);\r\n                            let dia = dias[fecha.getDay()];\r\n                            let dayMinTemp = `${i.temp.min}°C`;\r\n                            let dayMaxTemp = `${i.temp.max}°C`;\r\n                            let codeIcon = i.weather[0].icon;\r\n                            let description = i.weather[0].description;\r\n                            let pressure = i.pressure;\r\n                            let humidity = i.humidity;\r\n                            let windSpeed = i.wind_speed;\r\n                            return(\r\n                            \r\n                                <div class=\"column is-2\">\r\n                                    <article class=\"column is-12 is-centered is-multiline is-mobile tile is-child notification is-primary-light\">\r\n                                        <div className=\"card\">\r\n                                            <div class=\"card-image\">\r\n                                                <figure class=\"image is-4by3\">\r\n                                                    <img src={`http://openweathermap.org/img/wn/${codeIcon}@2x.png`} alt=\"Placeholder image\"/>\r\n                                                </figure>\r\n                                                <p class=\"title is-6 has-text-centered p-4\">{dia}</p>\r\n                                                <p class=\"tag is-success is-light has-text-centered  p-4\">{description}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"tags are-medium mt-2\">\r\n                                            <span class=\"tag is-info is-normal\">Min:{` ${dayMinTemp}`}</span>\r\n                                            <span class=\"tag is-info is-normal\">Max:{` ${dayMaxTemp}`}</span>\r\n                                        </div>\r\n                                        <div class=\"tags are-medium mt-2\">\r\n                                            <span class=\"tag is-info is-normal is-light\"><code>{` ${ pressure } `}</code>hPa</span>\r\n                                            <span class=\"tag is-info is-normal is-light\"> <code>{` ${ humidity } `}</code>%</span>\r\n                                            <span class=\"tag is-info is-normal is-light\"> <code>{` ${ windSpeed } `}</code>m/s</span>\r\n                                        </div>\r\n                                    </article>\r\n                                </div>\r\n                                \r\n                            )\r\n                            \r\n                        })\r\n                        \r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n    } else {\r\n    return (\r\n        <div className=\"spinner-grow text-center\" role=\"status\">\r\n    \r\n        </div>\r\n    );\r\n    }\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { CoordenadasDelContexto } from '../contexto/Context';\r\n\r\nexport const InfoHoy = () => {\r\n    const {\r\n        latitud,\r\n        longitud,\r\n        queryWeather,\r\n        setWeatherInfo,\r\n        weatherInfo,\r\n    } = useContext(CoordenadasDelContexto);\r\n    \r\n    useEffect(() => {\r\n    if (queryWeather) {\r\n        axios\r\n        .get(\r\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${latitud}&lon=${longitud}&units=metric&appid=9588234de2b6e8b80bcda45cfc3f4e36`\r\n        )\r\n        .then((res) => {\r\n            setWeatherInfo(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    }, [queryWeather]);\r\n    if (weatherInfo !== \"\") {\r\n        localStorage.setItem(\"weatherInfo\", JSON.stringify(weatherInfo));\r\n        let codeIcon = weatherInfo.current.weather[0].icon;\r\n        if (queryWeather) {\r\n            localStorage.setItem(\r\n            \"City\",\r\n            JSON.stringify(document.getElementById(\"buscador\").value)\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"clima-hoy\">\r\n            <div className=\"media clima-descripcion\">\r\n                <img\r\n                src={`http://openweathermap.org/img/wn/${codeIcon}@2x.png`}\r\n                className=\"align-self-start mr-3 icon\"\r\n                alt=\"icon\"\r\n                />\r\n                <div className=\"media-body variables-clima-hoy\">\r\n                <h6 className=\"mt-0 font-color font-color-b\">{`${weatherInfo.current.temp}°C ${weatherInfo.current.weather[0].main}`}</h6>\r\n\r\n                <p>\r\n                    <i className=\"font-color-b\">\r\n                    {\" \"}\r\n                    {weatherInfo.current.weather[0].description}\r\n                    </i>\r\n                </p>\r\n                <p>\r\n                    <small className=\"font-color-b\">\r\n                    <b className=\"font-color-b\">Feels Like: </b>\r\n                    {`${weatherInfo.current.feels_like}°C`}\r\n                    </small>{\" \"}\r\n                </p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n        } else {\r\n        return (\r\n            <div className=\"spinner-grow text-center\" role=\"status\">\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { CoordenadasDelContexto } from '../contexto/Context'\r\n\r\nexport const VariablesClima = () => {\r\n    const { weatherInfo, queryWeather } = useContext(CoordenadasDelContexto);\r\n\r\n    if (weatherInfo !== \"\") {\r\n        return (\r\n            <div className=\"p-2\">\r\n        \r\n                    <div class=\"field is-grouped is-grouped-multiline is-inline\">\r\n                        <div class=\"control\">\r\n                            <div class=\"tags has-addons\">\r\n                            <span class=\"tag is-dark\"> Wind:</span>\r\n                            <span class=\"tag is-info\">{weatherInfo.current.wind_speed}<small>m/s</small></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"field is-grouped is-grouped-multiline is-inline\">\r\n                        <div class=\"control\">\r\n                            <div class=\"tags has-addons\">\r\n                            <span class=\"tag is-dark\"> Humidity:</span>\r\n                            <span class=\"tag is-info\"> {weatherInfo.current.humidity}<small>%</small></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n \r\n                    <div class=\"field is-grouped is-grouped-multiline\">\r\n                        <div class=\"control\">\r\n                            <div class=\"tags has-addons\">\r\n                            <span class=\"tag is-dark\"> Dew Pt:</span>\r\n                            <span class=\"tag is-info\"> {weatherInfo.current.dew_point}<small>°C</small></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"field is-grouped is-grouped-multiline\">\r\n                        <div class=\"control\">\r\n                            <div class=\"tags has-addons\">\r\n                            <span class=\"tag is-dark\"> Uv Index:</span>\r\n                            <span class=\"tag is-info\"> {weatherInfo.current.uvi}<small></small></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field is-grouped is-grouped-multiline\">\r\n                        <div class=\"control\">\r\n                            <div class=\"tags has-addons\">\r\n                            <span class=\"tag is-dark\"> Visibility:</span>\r\n                            <span class=\"tag is-info\">  {weatherInfo.current.visibility}<small>mts</small></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"field is-grouped is-grouped-multiline\">\r\n                        <div class=\"control\">\r\n                            <div class=\"tags has-addons\">\r\n                            <span class=\"tag is-dark\"> Pressure:</span>\r\n                            <span class=\"tag is-info\">  {weatherInfo.current.pressure}<small>hPa</small></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n            );\r\n        } else {\r\n            return (\r\n            <div className=\"spinner-grow text-center\" role=\"status\">\r\n\r\n            </div>\r\n            );\r\n        }\r\n}\r\n","import React from 'react'\r\nimport { Context } from '../contexto/Context'\r\nimport {Nav} from '../header/nav'\r\nimport { InfoDia } from '../infodia/InfoDia'\r\nimport { InfoHoy } from '../infohoy/InfoHoy'\r\nimport { VariablesClima } from '../variables/VariablesClima'\r\nexport const InicioApp = () => {\r\n    return (\r\n\r\n            <Context>\r\n                <Nav/>\r\n                <InfoHoy/>\r\n                <InfoDia></InfoDia>\r\n                <VariablesClima/>\r\n\r\n            </Context>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport { InicioApp } from '../components/inicio/InicioApp'\r\n\r\n\r\nexport const Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component = { InicioApp } />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from 'react'\nimport './App.css';\nimport { Router } from './routers/Router';\n\nexport const App = () => {\n  return (\n      <Router></Router> \n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport 'bulma/css/bulma.css';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}